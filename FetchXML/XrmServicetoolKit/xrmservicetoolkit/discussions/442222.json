[
  {
    "Id": "1038105",
    "ThreadId": "442222",
    "Html": "I revised the SOAP.queryAll and SOAP.fetchMore methods to allow sort order (asc or desc) parameter to be passed. Below is the updated code for the queryAll method (the moreFetchXml var of the fetchMore method should mirror this as well):<br />\n<pre><code>var queryAll = function (queryOptions, callback) {\n        ///&lt;summary&gt;\n        /// Sends synchronous/asynchronous request to do a queryAll request. This is to return all records (&gt;5k+).\n        /// Consider Performance impact when using this method.\n        ///&lt;/summary&gt;\n        ///&lt;param name=&quot;queryOptions&quot; type=&quot;Object&quot;&gt;\n        /// A JavaScript Object with properties corresponding to the queryByAttribute Criteria\n        /// that are valid for queryByAttribute operations.\n        /// queryOptions.entityName is a string represents the name of the entity\n        /// queryOptions.attributes is a array represents the attributes of the entity to query\n        /// queryOptions.values is a array represents the values of the attributes to query\n        /// queryOptions.columnSet is a array represents the attributes of the entity to return\n        /// queryOptions.orderBy is a array represents the order conditions of the results\n        /// queryOptions.orderDescending is a boolean represents the sort order conditions of the results\n        /// &lt;/param&gt;\n        ///&lt;param name=&quot;callback&quot; type=&quot;Function&quot;&gt;\n        /// A Function used for asynchronous request. If not defined, it sends a synchronous request.\n        /// &lt;/param&gt;\n        var entityName = queryOptions.entityName;\n        var attributes = queryOptions.attributes;\n        var values = queryOptions.values;\n        var columnSet = queryOptions.columnSet;\n        var orderBy = queryOptions.orderBy || '';\n        var orderDescending = queryOptions.orderDescending || '';\n\n        attributes = isArray(attributes) ? attributes : [attributes];\n        values = isArray(values) ? values : [values];\n        orderBy = (!!orderBy &amp;&amp; isArray(orderBy)) ? orderBy : [orderBy];\n        orderDescending = (!!orderDescending &amp;&amp; isArray(orderDescending)) ? orderDescending : [orderDescending];\n        columnSet = (!!columnSet &amp;&amp; isArray(columnSet)) ? columnSet : [columnSet];\n\n        for (var i = 0; i &lt; values.length; i++) {\n            values[i] = encodeValue(values[i]);\n        }\n\n        var fetchXml =\n                [\n                    &quot;&lt;fetch mapping='logical'&gt;&quot;,\n                    &quot;   &lt;entity name='&quot;, entityName, &quot;'&gt;&quot;,\n                           joinArray(&quot;&lt;attribute name='&quot;, columnSet, &quot;' /&gt;&quot;),\n                           joinArray(&quot;&lt;order attribute='&quot;, orderBy, &quot;'&quot;),\n                           joinArray(&quot; descending='&quot;, orderDescending, &quot;' /&gt;&quot;),\n                    &quot;      &lt;filter&gt;&quot;,\n                              joinConditionPair(attributes, values),\n                    &quot;      &lt;/filter&gt;&quot;,\n                    &quot;   &lt;/entity&gt;&quot;,\n                    &quot;&lt;/fetch&gt;&quot;\n                ].join(&quot;&quot;);\n\n        var msgBody = &quot;&lt;query i:type='a:FetchExpression' xmlns:a='http://schemas.microsoft.com/xrm/2011/Contracts'&gt;&quot; +\n                            &quot;&lt;a:Query&gt;&quot; +\n                                ((typeof window.CrmEncodeDecode != 'undefined') ? window.CrmEncodeDecode.CrmXmlEncode(fetchXml) : crmXmlEncode(fetchXml)) +\n                            &quot;&lt;/a:Query&gt;&quot; +\n                        &quot;&lt;/query&gt;&quot;;\n        var async = !!callback;\n\n        return doRequest(msgBody, &quot;RetrieveMultiple&quot;, !!callback, function (resultXml) {\n\n            //Logic here is inspired by http://nishantrana.wordpress.com/2012/09/11/paging-cookie-is-required-when-trying-to-retrieve-a-set-of-records-on-any-high-pages-error-in-crm-2011/\n\n            var fetchResult;\n            var moreRecords;\n\n            if ($(resultXml).find(&quot;a\\\\:Entities&quot;).length != 0) {\n                fetchResult = $(resultXml).find(&quot;a\\\\:Entities&quot;).eq(0)[0];\n            } else {\n                fetchResult = $(resultXml).find(&quot;Entities&quot;).eq(0)[0]; //chrome\n            }\n\n            if ($(resultXml).find(&quot;a\\\\:MoreRecords&quot;).length != 0) {\n                moreRecords = $(resultXml).find(&quot;a\\\\:MoreRecords&quot;).eq(0)[0].firstChild.text === &quot;true&quot;;\n            } else {\n                moreRecords = $(resultXml).find(&quot;MoreRecords&quot;).eq(0)[0].firstChild.text === &quot;true&quot;; //chrome\n            }\n\n            var fetchResults = [];\n\n            for (var ii = 0; ii &lt; fetchResult.childNodes.length; ii++) {\n                var entity = new businessEntity();\n\n                entity.deserialize(fetchResult.childNodes[ii]);\n                fetchResults.push(entity);\n            }\n\n            if (moreRecords) {\n                var pageNumber = 2;\n                var pageCookie;\n                if ($(resultXml).find(&quot;a\\\\:PagingCookie&quot;).length != 0) {\n                    pageCookie = $(resultXml).find(&quot;a\\\\:PagingCookie&quot;).eq(0)[0].firstChild.text.replace(/\\&quot;/g, '\\'').replace(/&lt;/g, '&amp;lt;').replace(/&gt;/g, '&amp;gt;').replace(/'/g, '&amp;quot;');\n                } else {\n                    pageCookie = $(resultXml).find(&quot;PagingCookie&quot;).eq(0)[0].firstChild.text.replace(/\\&quot;/g, '\\'').replace(/&lt;/g, '&amp;lt;').replace(/&gt;/g, '&amp;gt;').replace(/'/g, '&amp;quot;');\n                }\n                fetchMore(queryOptions, pageNumber, pageCookie, fetchResults);\n            }\n\n            if (!async)\n                return fetchResults;\n            else\n                callback(fetchResults);\n            // ReSharper disable NotAllPathsReturnValue\n        });\n    };</code></pre>\n\n",
    "PostedDate": "2013-05-01T07:24:11.17-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1043754",
    "ThreadId": "442222",
    "Html": "Hi There.\r<br />\n<br />\nThanks for doing this. I will have a look at the code soon.\r<br />\n<br />\nRegards,\r<br />\nJaimie<br />\n",
    "PostedDate": "2013-05-15T02:30:45.01-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1049150",
    "ThreadId": "442222",
    "Html": "Codeplex is not very good for collaborating. Can you, please, transfer <em>development</em> to GitHub and use Codeplex for stable releases?<br />\n",
    "PostedDate": "2013-05-27T06:22:48.977-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]