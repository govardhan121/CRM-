[
  {
    "Id": "1432996",
    "ThreadId": "640901",
    "Html": "Below the code I use for a initializeFrom request to for example create a quote based on a opportunity.\r<br />\nMaybe it is useful to add it to the toolkit.<br />\n<div style=\"color:Black;background-color:White;\"><pre>\r\n    <span style=\"color:Blue;\">var</span> initializeFrom = <span style=\"color:Blue;\">function</span> (entityName, id, targetEntityName, callback) {\n        <span style=\"color:Green;\">///&lt;summary&gt;</span>\n        <span style=\"color:Green;\">/// Sends synchronous/asynchronous request to setState of a record.</span>\n        <span style=\"color:Green;\">///&lt;/summary&gt;</span>\n        <span style=\"color:Green;\">///&lt;param name=&quot;entityName&quot; type=&quot;String&quot;&gt;</span>\n        <span style=\"color:Green;\">/// A JavaScript String corresponding to the Schema name of</span>\n        <span style=\"color:Green;\">/// entity that is used for initializeFrom operations.</span>\n        <span style=\"color:Green;\">/// &lt;/param&gt;</span>\n        <span style=\"color:Green;\">///&lt;param name=&quot;id&quot; type=&quot;String&quot;&gt;</span>\n        <span style=\"color:Green;\">/// A JavaScript String corresponding to the GUID of</span>\n        <span style=\"color:Green;\">/// entity that is used for initializeFrom operations.</span>\n        <span style=\"color:Green;\">/// &lt;/param&gt;</span>\n        <span style=\"color:Green;\">///&lt;param name=&quot;targetEntityName&quot; type=&quot;String&quot;&gt;</span>\n        <span style=\"color:Green;\">/// A JavaScript String corresponding to the value of</span>\n        <span style=\"color:Green;\">/// target entity that is used for initializeFrom operations.</span>\n        <span style=\"color:Green;\">/// &lt;/param&gt;</span>\n        <span style=\"color:Green;\">///&lt;param name=&quot;callback&quot; type=&quot;Function&quot;&gt;</span>\n        <span style=\"color:Green;\">/// A Function used for asynchronous request. If not defined, it sends a synchronous request.</span>\n        <span style=\"color:Green;\">/// &lt;/param&gt;</span>\n\n        <span style=\"color:Blue;\">var</span> request = [\n            <span style=\"color:#A31515;\">&quot;&lt;request i:type=&#39;b:InitializeFromRequest&#39; xmlns:a=&#39;http://schemas.microsoft.com/xrm/2011/Contracts&#39; xmlns:b=&#39;http://schemas.microsoft.com/crm/2011/Contracts&#39;&gt;&quot;</span>,\n                <span style=\"color:#A31515;\">&quot;&lt;a:Parameters xmlns:c=&#39;http://schemas.datacontract.org/2004/07/System.Collections.Generic&#39;&gt;&quot;</span>,\n                    <span style=\"color:#A31515;\">&quot;&lt;a:KeyValuePairOfstringanyType&gt;&quot;</span>,\n                        <span style=\"color:#A31515;\">&quot;&lt;c:key&gt;EntityMoniker&lt;/c:key&gt;&quot;</span>,\n                        <span style=\"color:#A31515;\">&quot;&lt;c:value i:type=&#39;a:EntityReference&#39;&gt;&quot;</span>,\n                          <span style=\"color:#A31515;\">&quot;&lt;a:Id&gt;&quot;</span>, id, <span style=\"color:#A31515;\">&quot;&lt;/a:Id&gt;&quot;</span>,\n                          <span style=\"color:#A31515;\">&quot;&lt;a:LogicalName&gt;&quot;</span>, entityName, <span style=\"color:#A31515;\">&quot;&lt;/a:LogicalName&gt;&quot;</span>,\n                          <span style=\"color:#A31515;\">&quot;&lt;a:Name i:nil=&#39;true&#39; /&gt;&quot;</span>,\n                        <span style=\"color:#A31515;\">&quot;&lt;/c:value&gt;&quot;</span>,\n                      <span style=\"color:#A31515;\">&quot;&lt;/a:KeyValuePairOfstringanyType&gt;&quot;</span>,\n                      <span style=\"color:#A31515;\">&quot;&lt;a:KeyValuePairOfstringanyType&gt;&quot;</span>,\n                        <span style=\"color:#A31515;\">&quot;&lt;c:key&gt;TargetEntityName&lt;/c:key&gt;&quot;</span>,\n                        <span style=\"color:#A31515;\">&quot;&lt;c:value i:type=&#39;a:string&#39; xmlns:a=&#39;http://www.w3.org/2001/XMLSchema&#39;&gt;&quot;</span>, targetEntityName, <span style=\"color:#A31515;\">&quot;&lt;/c:value&gt;&quot;</span>,\n                      <span style=\"color:#A31515;\">&quot;&lt;/a:KeyValuePairOfstringanyType&gt;&quot;</span>,\n                      <span style=\"color:#A31515;\">&quot;&lt;a:KeyValuePairOfstringanyType&gt;&quot;</span>,\n                        <span style=\"color:#A31515;\">&quot;&lt;c:key&gt;TargetFieldType&lt;/c:key&gt;&quot;</span>,\n                        <span style=\"color:#A31515;\">&quot;&lt;c:value i:type=&#39;b:TargetFieldType&#39;&gt;All&lt;/c:value&gt;&quot;</span>,\n                      <span style=\"color:#A31515;\">&quot;&lt;/a:KeyValuePairOfstringanyType&gt;&quot;</span>,\n                <span style=\"color:#A31515;\">&quot;&lt;/a:Parameters&gt;&quot;</span>,\n                <span style=\"color:#A31515;\">&quot;&lt;a:RequestId i:nil=&#39;true&#39; /&gt;&quot;</span>,\n                <span style=\"color:#A31515;\">&quot;&lt;a:RequestName&gt;InitializeFrom&lt;/a:RequestName&gt;&quot;</span>,\n            <span style=\"color:#A31515;\">&quot;&lt;/request&gt;&quot;</span>\n        ].join(<span style=\"color:#A31515;\">&quot;&quot;</span>);\n\n        <span style=\"color:Blue;\">var</span> async = !!callback;\n\n        <span style=\"color:Blue;\">return</span> doRequest(request, <span style=\"color:#A31515;\">&quot;Execute&quot;</span>, async, <span style=\"color:Blue;\">function</span> (resultXml) {\n            <span style=\"color:Blue;\">var</span> response;\n            <span style=\"color:Blue;\">if</span> (jQuery(resultXml).find(<span style=\"color:#A31515;\">&#39;c\\\\:value&#39;</span>).length != 0) {\n                response = jQuery(resultXml).find(<span style=\"color:#A31515;\">&#39;c\\\\:value&#39;</span>).eq(0)[0];\n            } <span style=\"color:Blue;\">else</span> {\n                response = jQuery(resultXml).find(<span style=\"color:#A31515;\">&#39;value&#39;</span>).eq(0)[0]; \n            }\n\n            <span style=\"color:Blue;\">var</span> entity = <span style=\"color:Blue;\">new</span> businessEntity();\n            entity.deserialize(response);\n\n            <span style=\"color:Blue;\">if</span> (!async)\n                <span style=\"color:Blue;\">return</span> entity;\n            <span style=\"color:Blue;\">else</span>\n                callback(entity);\n            <span style=\"color:Green;\">// ReSharper disable NotAllPathsReturnValue</span>\n        });\n        <span style=\"color:Green;\">// ReSharper restore NotAllPathsReturnValue</span>\n    };\r\n</pre></div>",
    "PostedDate": "2015-07-03T02:40:54.343-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]